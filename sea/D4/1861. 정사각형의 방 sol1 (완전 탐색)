package ssafy_algo_0205;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class SWEA_1861_D4 {
	private static int N;
	private static int[][] map;
	private static int[] dr = { -1, 1, 0, 0 }; // 상 하 좌 우
	private static int[] dc = { 0, 0, -1, 1 };

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int T = Integer.parseInt(br.readLine());
		for (int tc = 1; tc <= T; tc++) {
			N = Integer.parseInt(br.readLine());
			map = new int[N][N]; 
			for (int i = 0; i < N; i++) {
				StringTokenizer st = new StringTokenizer(br.readLine(), " ");
				for (int j = 0; j < N; j++) {
					map[i][j] = Integer.parseInt(st.nextToken());
				}
			}
			// 입력 완료.
			int[] max = { 1, 1 }; // max[0]=출발 방번호 max[1]=최대 방문 방 갯수
			int cr = 0, cc = 0;
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					int cnt = 1;
					cr = i;
					cc = j;
					while (true) {
						int d;
						for (d = 0; d < 4; d++) {
							int nr = cr + dr[d];
							int nc = cc + dc[d];
							if (nr >=0  && nr < N && nc >= 0 && nc < N && map[nr][nc] == map[cr][cc] + 1) {
								// 범위안에 있고 나보다 1크다면
								++cnt;
								cr = nr; 
								cc = nc;
								break;			//이동 완료하고 그만 탐색.
							} 
						}
						//탐색 다했는데 움직일 방향 없으면
						if(d==4) {
							break;		//while문 탈출.
						}
					}
					if (cnt>max[1] || (cnt == max[1] && map[i][j]<max[0])) {	//여기 중요중요...
						max[0] = map[i][j];
						max[1] = cnt;
					}
				}
			}
			StringBuilder sb = new StringBuilder();
			sb.append("#").append(tc).append(" ").append(max[0]).append(" ").append(max[1]);
			System.out.println(sb);
		}
	}
}
