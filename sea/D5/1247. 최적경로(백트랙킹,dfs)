package ssafy_algo_0218;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class SWEA_1247_D5 {
	static int N;
	static Pos company;
	static Pos home;
	static Pos[] customer;
	static int Min;
	
	static class Pos {
		int y,x;
		public Pos(int y, int x){
			super();
			this.y = y;
			this.x = x;
		}
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int T = Integer.parseInt(st.nextToken());
		
		for(int tc=1; tc<=T; tc++) {
			st = new StringTokenizer(br.readLine());
			N = Integer.parseInt(st.nextToken());		//고객의 수
			
			customer = new Pos[N];				//고객 배열 생성.
			
			st = new StringTokenizer(br.readLine());
			company = new Pos(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			home = new Pos(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			
			for(int i=0; i<N; i++) {
				customer[i] = new Pos(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
			}
			// 입력 다 받음.
			
			Min = Integer.MAX_VALUE;	//최솟값 초기화.
			
			dfs(0, company.y, company.x, 0, new boolean[101][101]);		//회사부터 첫 시작점까지 거리.
			
			
			StringBuilder sb = new StringBuilder();
			sb.append("#").append(tc).append(" ").append(Min);
			System.out.println(sb);
		}
	}
							//탐색 고객 수, 현재 탐색 위치, 현재까지 거리, 방문여부 체크.
	public static void dfs(int cnt, int y, int x, int dist, boolean[][] visited) {	
		visited[y][x]=true;		//현재 점 방문 체크.
		if(dist>Min) {			//진행중인데 현재 최솟값보다 이미 크면 리턴.
			return;
		}
		if(cnt==N) {					//경로 한개 완성.
			Min=Math.min(Min, dist+ Math.abs(y-home.y)+Math.abs(x-home.x));	//집까지의 거리까지 더한다.
			return;
		}
		for(int i=0; i<customer.length; i++) {	//	다음 고객 탐색
			Pos nc = customer[i];				// 	다음 고객
			if(!visited[nc.y][nc.x]) {			//	 방문 안했다면
				dfs(cnt+1, nc.y,nc.x,dist+Math.abs(nc.y-y)+Math.abs(nc.x-x),visited);	//현재까지거리+다음점까지 거리
				visited[nc.y][nc.x]=false;		//  방문 여부 해제
			}
		}
	}
}
