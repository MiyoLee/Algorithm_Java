package ssafy_algo_0325;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

//최장 증가 부분수열
public class SWEA_3307_D3 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;
		int T = Integer.parseInt(br.readLine());
		
		for (int tc = 1; tc <= T; tc++) {
			int N = Integer.parseInt(br.readLine());	//수열의 길이
			int[] arr = new int[N];
			
			st = new StringTokenizer(br.readLine());
			for(int i=0; i<N; i++) {
				arr[i] = Integer.parseInt(st.nextToken());
			}
			//입력 완료
			int[] dp = new int[N];		//각 원소가 마지막 원소일때 수열의 최장길이
			int max=0;
			for(int i=0; i<N; i++) {
				dp[i]=1;
				for (int j = 0; j < i; j++) {
					if(arr[j]<arr[i] && dp[i]<dp[j]+1) {
						dp[i] = dp[j]+1;
					}
				}
				if(dp[i]>max)max=dp[i];
			}
			System.out.println("#"+tc+" "+max);
		}
		
	}
}
