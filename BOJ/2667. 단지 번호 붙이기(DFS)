import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

class Posi{
	public int r;
	public int c;
	public Posi(int r, int c) {
		super();
		this.r = r;
		this.c = c;
	}
}
public class BOJ_2667 {
	static int N;
	static int[][] map;
	static int[] dr = {-1,1,0,0};
	static int[] dc = {0,0,-1,1};
	static int cnt=0;
	static List<Integer> result = new ArrayList<>();
	
	public static void print() {
		StringBuilder sb = new StringBuilder();
		for(int i=0; i<N; i++) {
			for(int j=0; j<N; j++) {
				sb.append(map[i][j]);
			}
			sb.append("\n");
		}
		System.out.println(sb);
	}
	public static void DFS(int r, int c, int n) {		//시작점과 몇번째 단지인지.
		map[r][c] = n;
		++cnt;
		for(int d=0; d<4; d++) {
			int nr = r+dr[d];
			int nc = c+dc[d];
			if(nr>=0 && nr<N && nc>=0 && nc<N && map[nr][nc]==1) {
				DFS(nr,nc,n);
			}
		}
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		N = Integer.parseInt(st.nextToken());
		map = new int[N][N];
		
		for(int i=0; i<N; i++) {
			String tmp = br.readLine();
			for(int j=0; j<N; j++) {
				map[i][j] = tmp.charAt(j)-'0';
			}
		}
		// 입력 완료.
		
		int n=1;
		for(int i=0; i<map.length; i++) {
			for(int j=0; j<map[i].length; j++) {
				if(map[i][j]==1) {
					++n;
					DFS(i,j,n);
					result.add(cnt);
					cnt=0;
				}
			}
		}
		
		System.out.println(n-1);
		result.sort(null);
		for(int i=0; i<result.size(); i++) {
			System.out.println(result.get(i));
		}
	}
}
