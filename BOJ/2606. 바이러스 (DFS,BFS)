import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;


public class BOJ_2606 {
	static int N,M;
	static boolean[][] connected;
	static boolean[] visited;
	static int cnt=0;
	
	public static void init() {		//visite배열과 cnt 초기화.
		for(int i=0; i<visited.length; i++) {
			visited[i]=false;
		}
		cnt=0;
	}
	public static void DFS(int c) {		//감영된  컴퓨터
		visited[c]=true;
		for(int i=1; i<=N; i++) {
			if(!visited[i] && connected[c][i]==true) {
				++cnt;
				DFS(i);
			}
		}
	}
	public static void BFS(int c) {
		Queue<Integer>q = new LinkedList<>();
		q.offer(c);
		visited[c]=true;
		while(!q.isEmpty()) {
			c = q.poll();
			for(int i=1; i<=N; i++) {
				if(!visited[i] && connected[c][i]==true) {
					q.offer(i);
					++cnt;
					visited[i]=true;
				}
			}
		}
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		N = Integer.parseInt(st.nextToken());		//컴퓨터의 수 
		st = new StringTokenizer(br.readLine()," ");
		M = Integer.parseInt(st.nextToken());		//연결된 쌍 수
		
		connected = new boolean[N+1][N+1];		//컴퓨터 1번~N번
		visited = new boolean[N+1];
		
		for(int i=1; i<=M; i++) {
			st = new StringTokenizer(br.readLine()," ");
			int r = Integer.parseInt(st.nextToken());
			int c = Integer.parseInt(st.nextToken());
			connected[r][c]=connected[c][r]=true;
		}
		DFS(1);		
		System.out.println(cnt);
		init();
		BFS(1);
		System.out.println(cnt);
	}
}
