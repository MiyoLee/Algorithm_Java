import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static int N;
	static int[] col;
	static int ans;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		N = Integer.parseInt(st.nextToken());	//체스판의 크기 입력받음.
		col = new int[N];
		
		for(int j=0; j<N; j++) {	//첫번째 행의 열 선택.
			dfs(0,j);
		}
		
		System.out.println(ans);
	}
	public static void dfs(int r, int c) {	//현재 탐색 위치
		col[r]=c;		//r c열에 퀸 놓음.
		
		//가지치기
		for(int i=0; i<r; i++) {		//지금까지 놨던 체스들 순회
			if(col[i]==c || Math.abs(i-r)==Math.abs(col[i]-c)) {	//이전에 놨던 퀸이 공격할수 있는 자리라면
				return;
			}
		}
		
		//기저조건
		if(r==N-1) {	//한 판 완성
			ans++;
			return;
		}
		
		//유도파트
		for(int j=0; j<N; j++) {	//다음 행의 열 탐색
			dfs(r+1, j);
		}
	}
}
