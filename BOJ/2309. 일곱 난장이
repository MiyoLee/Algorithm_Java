package ssafy_algo_0205;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class BOJ_2309 {
	private static int[] dwarfs;
	private static StringBuilder sb = new StringBuilder();
	private static int[] result = new int[7];
	private static int flag=0;
	private static void Combination(int cnt, int[] selected, int startIdx) {
		if (cnt == 7) {
			int sum = 0;
			for (int d : selected) {
				sum += d;
			}
			if (sum == 100 && result[0] == 0) {
				for (int i = 0; i < 7; i++) {
					result[i] = selected[i];
				}
				flag=1;
			}
			return;
		}
		for (int i = startIdx; i < dwarfs.length; i++) {
			selected[cnt] = dwarfs[i];
			Combination(cnt + 1, selected, i + 1);
			if(flag==1) break;
		}
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		dwarfs = new int[9];
		for (int i = 0; i < 9; i++) {
			dwarfs[i] = Integer.parseInt(br.readLine());
		}

		Combination(0, new int[7], 0);
		Arrays.sort(result); // 결과값을 오름차순으로 정렬

		StringBuilder sb = new StringBuilder();
		for (int r : result) {
			sb.append(r).append('\n');
		}
		System.out.println(sb);
	}
}
