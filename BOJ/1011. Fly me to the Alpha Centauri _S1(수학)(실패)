package boj;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BOJ_1011_S1 {
	static long X,Y;
	static long dest;
	static long min;
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		long T = Long.parseLong(br.readLine());
		for(long tc=1; tc<=T; tc++) {
			st = new StringTokenizer(br.readLine());
			X = Long.parseLong((st.nextToken()));
			Y = Long.parseLong((st.nextToken()));
			// 입력 다 받음.
			
			// 구하고자 하는 값 : 0~(Y-X) 까지 가는 최소 횟수
			
			min = Long.MAX_VALUE;
			dest = Y-1-X; 
			dfs(0, dest, 0, 1);
			System.out.println(min+1);
		}
	}
	//x: 현재 위치, y: 목적지 위치, cnt:이동한 횟수, dist: 이동할 거리
	public static void dfs(long x, long y, long cnt, long dist) {
		x+=dist;	//이동함.
		
		if(cnt+1 >= min)return;
		if(x > y)return;
		if(x == y) {		//목적지까지 딱 도착했다.
			if(dist==1 || dist==2)min=cnt+1;		//마지막(Y-1-X)까지 이동은 1아니면 2여야됨.
			return;
		}
		
		if(dist-1>0) {
			dfs(x, y, cnt+1, dist-1);
		}
		dfs(x, y, cnt+1, dist);
		dfs(x, y, cnt+1, dist+1);
	}
}
