package com.ssafy.hwalgo20;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

//dp
public class BOJ_1149_S1 {
	static int N;
	static int[][] cost;
	static int[][] dp;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;
		N = Integer.parseInt(br.readLine());
		cost = new int[N+1][3];
		dp = new int[N+1][3];	//i번째집을 j색으로 칠했을때 최소비용
		
		for(int i=1; i<=N; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0; j<3; j++) {
				cost[i][j]=Integer.parseInt(st.nextToken());
			}
		}
		//입력 완료
		
		//초기화
		for(int j=0; j<3; j++) {
			dp[1][j]=cost[1][j];
		}
		
		for(int i=2; i<=N; i++) {
			for(int j=0; j<3; j++) {
				dp[i][j] = cost[i][j] + Math.min(dp[i-1][(j+1)%3], dp[i-1][(j+2)%3]);
			}
		}
		//dp 계산 완료.
		int min=Integer.MAX_VALUE;
		for(int j=0; j<3; j++) {
			if(min>dp[N][j])min=dp[N][j];
		}
		System.out.println(min);
	}
}
