package boj;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

//레벨 햄버거
public class BOJ_16974_S3 {
	static int N;
	static long X;
	static long[] l;		//레벨 n 햄버거의 길이
	static long[] p;		//레벨 n 햄버거의 패티 갯수
	public static void main(String[] args) throws IOException {
		 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		 StringTokenizer st = new StringTokenizer(br.readLine());
		 N = Integer.parseInt(st.nextToken());
		 X = Long.parseLong(st.nextToken());
		 //입력 완료.
		 l = new long[N+1];
		 p = new long[N+1];
		 for(int n=0; n<=N; n++) {
			 if(n==0) {
				 l[n]=1;
				 p[n]=1;
			 }
			 else {
				 l[n]=2*l[n-1]+3;
				 p[n]=2*p[n-1]+1;
			 }
		 }
		 //System.out.println(p[N]);
		 System.out.println(solve(N,X));
	}
	//먹은 패티개수 리턴하는 함수
	public static long solve(int n, long x) {		//레벨, 그 레벨 햄버거에서 몇번째까지 먹는지
		if(n==0)return 1;
		else {
			if(x==1)return 0;	
			else if(x <= 1+l[n-1]) {
				return solve(n-1, x-1);
			}
			else if(x == 2+l[n-1]) {
				return p[n-1]+1;
			}
			else if(x >= 3+l[n-1]){
				return p[n-1]+1+solve(n-1, x-l[n-1]-2);
			}
			else {
				return 2*p[n-1]+1;
			}
		}
	}
}
