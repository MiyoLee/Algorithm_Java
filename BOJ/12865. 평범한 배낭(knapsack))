package ssafy_algo_0208;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BOJ_12865 {
	static int N,K;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		
		N = Integer.parseInt(st.nextToken());		//물건 갯수.
		K = Integer.parseInt(st.nextToken());		//최대 무게
		
		int[] w = new int[N+1];		//1~N 무게 저장
		int[] v = new int[N+1];		//1~N 가치 저장
		int[][] dp = new int[N+1][K+1];		//0~N  0~K	0으로 초기화됌.
		
		for(int i=1; i<=N; i++) {
			st = new StringTokenizer(br.readLine()," ");
			w[i] = Integer.parseInt(st.nextToken());
			v[i] = Integer.parseInt(st.nextToken());
		}
		//입력 완료.
		for(int i=1; i<=N; i++) {
			for(int j=1; j<=K; j++) {
				if(w[i]>j) {
					dp[i][j] = dp[i-1][j];
				}
				else {
					dp[i][j] = Math.max(v[i]+dp[i-1][j-w[i]], dp[i-1][j]);
				}
			}
		}
		System.out.println(dp[N][K]);
	}
}
